#define POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 23
#define POPUP_EDITFIELD_LAYOUT_MINMAX_HEIGHT_INC 154
#define DEMO_POPUP_PROCESSINGVIEW1BUTTON_CONTENT_MIN 0 144
#define ENTRY_ITEM_HEIGHT 120
#define PADDING_LEFT 32
#define CONTACT_BUTTON_PADDING_RIGHT 17
#define CONTACT_BUTTON_PADDING_LEFT 17
#define CONTACT_BUTTON_SIZE 80

/************************* START OF FDN CALL BTN CHANGES **************************/

#define STYLE_FDN_LIST_CALL_BUTTON(grp_name, bg, bg_press, bg_dim, bg_w, bg_h, img, img_press, img_dim, img_w, img_h) \
	group { name: "elm/button/base/"grp_name; \
		data { \
			item: "focus_highlight" "on"; \
		} \
		images { \
			image: bg COMP; \
			image: bg_press COMP; \
			image: bg_dim COMP; \
			image: img COMP; \
			image: img_press COMP; \
			image: img_dim COMP; \
			image: "cst_vc_btn_bg_focus.png" COMP; \
		} \
		script { \
			public button_state = 0; \
		} \
		parts { \
			part { name: "button_image"; \
				type: IMAGE; \
				scale: 1; \
				description { state: "default" 0.0; \
					min: bg_w bg_h; \
					max: bg_w bg_h; \
					image { \
						normal: bg; \
					} \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: bg_press; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					image.normal: bg_dim; \
				} \
			} \
			part { name: "focus_image"; \
				mouse_events: 0; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					visible: 0; \
					rel1.to : "button_image"; \
					rel2.to : "button_image"; \
					image { \
						normal: "cst_vc_btn_bg_focus.png"; \
					} \
				} \
				description { state: "focused" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
			part { name: "content_image"; \
				scale: 1; \
				description { state: "default" 0.0; \
					min: img_w img_h; \
					max: img_w img_h; \
					image { \
						normal: img; \
					} \
					visible: 1; \
				} \
				description { state: "clicked" 0.0; \
					inherit: "default" 0.0; \
					image.normal: img_press; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					image.normal: img_dim; \
				} \
			} \
			part { name: "over2"; \
				type: RECT; \
				repeat_events: 1; \
				ignore_flags: ON_HOLD; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
				} \
			} \
			part { name: "over3"; \
				type: RECT; \
				repeat_events: 1; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
				} \
			} \
			part { name: "disabler"; \
				type: RECT; \
				description { state: "default" 0.0; \
					color: 0 0 0 0; \
					visible: 0; \
				} \
				description { state: "disabled" 0.0; \
					inherit: "default" 0.0; \
					visible: 1; \
				} \
			} \
		} \
		programs { \
			program { name: "button_click"; \
				signal: "mouse,down,1"; \
				source: "over3"; \
				action: SIGNAL_EMIT "elm,action,press" ""; \
				after: "button_click_anim"; \
			} \
			program { name: "button_click_anim"; \
				action: STATE_SET "clicked" 0.0; \
				target: "button_image"; \
				target: "content_image"; \
			} \
			program { name: "button_double_click"; \
				signal: "mouse,down,1,double"; \
				source: "over3"; \
				after: "button_click_anim"; \
			} \
			program { name: "button_unpress"; \
				action: SIGNAL_EMIT "elm,action,unpress" ""; \
			} \
			program { name: "button_mouseout_clicked"; \
				signal: "mouse,up,1"; \
				source: "over3"; \
				script { \
				if (get_int(button_state) != 1) \
					set_state(PART:"button_image", "default", 0.0); \
					set_state(PART:"content_image", "default", 0.0); \
				} \
				after: button_unpress; \
			} \
			program { name: "touch_snd"; \
				signal: "mouse,clicked,1"; \
				source: "over2"; \
				after: button_unclick3; \
			} \
			program { name: "button_unclick3"; \
				action: SIGNAL_EMIT "elm,action,click" ""; \
			} \
			program { name: "disable"; \
				signal: "elm,state,disabled"; \
				source: "elm"; \
				action: STATE_SET "disabled" 0.0; \
				target: "button_image"; \
				target: "content_image"; \
				target: "disabler"; \
			} \
			program { name: "enable"; \
				signal: "elm,state,enabled"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "button_image"; \
				target: "content_image"; \
				target: "disabler"; \
			} \
			program { name: "action_focus"; \
				signal: "elm,action,focus_highlight,show"; \
				source: "elm"; \
				action: STATE_SET "focused" 0.0; \
				target: "focus_image"; \
			} \
			program { name: "action_unfocus"; \
				signal: "elm,action,focus_highlight,hide"; \
				source: "elm"; \
				action: STATE_SET "default" 0.0; \
				target: "focus_image"; \
			} \
		} \
	}

/************************* END OF FDN CALL BTN CHANGES **************************/


collections {
   base_scale: 2.6;
   color_classes {
      color_class {
         name: "transparent";
         color: 0 0 0 0;
      }
   }

	sounds {
		sample {
			name: "touch_sound" RAW;
			source: "Tizen_Touch.wav";
		}
	}

	group { name: "elm/layout/popup/entrypasswordview_with_show_password";
	   parts {
	      part { name: "pad_t";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            align: 0.5 0.0;
	            min: 0 32;
	            fixed: 0 1;
	            rel1 {
	               relative: 1.0 0.0;to_x: "pad_l";
	            }
	            rel2 {
	               relative: 0.0 0.0;to_x: "pad_r";
	            }
	         }
	      }
	      part { name: "pad_l";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: 32 0;
	            max: 32 0;
	            fixed: 1 0;
	            rel1 {
	               relative: 0.0 0.0;
	            }
	            rel2 {
	               relative: 0.0 1.0;
	            }
	            align: 0.0 0.0;
	         }
	      }
	      part { name: "pad_r";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: 32 0;
	            max: 32 0;
	            fixed: 1 0;
	            rel1 {
	               relative: 1.0 0.0;
	            }
	            rel2 {
	               relative: 1.0 1.0;
	            }
	            align: 1.0 0.0;
	         }
	      }
	      part { name: "elm.swallow.content";
	         type: SWALLOW;
	         scale: 1;
	         description { state: "default" 0.0;
	            fixed: 1 0;
	            rel1 {
	               relative: 1.0 1.0;
	               to_x: "pad_l";
	               to_y: "pad_t";
	            }
	            rel2 {
	               relative: 0.0 0.0;
	               to_x: "pad_r";
	               to_y: "pad_b";
	            }
	         }
	      }
	      part { name: "bottom_pad";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            align: 0.0 1.0;
	            min: 0 32;
	            fixed: 0 1;
	            rel1 {
	               relative: 1.0 1.0;
	               to_x: "pad_l";
	            }
	            rel2 {
	               relative: 0.0 1.0;
	               to_x: "pad_r";
	            }
	         }
	      }
	      part { name: "pad_b";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            align: 0.0 1.0;
	            min: 0 60;
	            fixed: 0 1;
	            rel1 {
	               relative: 0.0 0.0;
	               to: "bottom_pad";
	            }
	            rel2 {
	               relative: 1.0 0.0;
	               to: "bottom_pad";
	            }
	         }
	      }
	      part { name: "end_field";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            align: 0.0 1.0;
	            min: 0 20;
	            fixed: 0 1;
	            rel1 {
	               relative: 0.0 1.0;
	               to: "pad_b";
	            }
	            rel2 {
	               relative: 1.0 1.0;
	               to: "pad_b";
	            }
	         }
	      }
	      part { name: "elm.swallow.end";
	         type: SWALLOW;
	         scale: 1;
	         description { state: "default" 0.0;
	            fixed: 1 1;
	            align: 0.0 0.5;
	            rel1.to: "end_field";
	            rel2.to: "end_field";
	         }
	      }
	   }
	}

	group { name: "elm/layout/popup/entrypasswordview";
	   parts {
	      part { name: "pad_l";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 0;
	            fixed: 1 0;
	            rel1.relative: 0.0 0.0;
	            rel2.relative: 0.0 1.0;
	            align: 0.0 0.0;
	         }
	      }
	      part { name: "pad_r";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 0;
	            fixed: 1 0;
	            rel1.relative: 1.0 0.0;
	            rel2.relative: 1.0 1.0;
	            align: 1.0 0.0;
	         }
	      }
	      part { name: "elm.swallow.content";
	         type: SWALLOW;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: 0 POPUP_EDITFIELD_LAYOUT_MINMAX_HEIGHT_INC;
	            max: -1 POPUP_EDITFIELD_LAYOUT_MINMAX_HEIGHT_INC;
	            align: 0.5 0.5;
	            rel1{
	               relative: 1.0 0.0 ;
	               to_x: "pad_l";
	            }
	            rel2{
	               relative: 0.0 1.0;
	               to_x: "pad_r";
	            }
	         }
	      }
	   }
	}
	group { name: "elm/layout/popup/callforwardingview";
	   parts {
	      part { name: "pad_l";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 0;
	            fixed: 1 0;
	            rel1.relative: 0.0 0.0;
	            rel2.relative: 0.0 1.0;
	            align: 0.0 0.0;
	         }
	      }
	      part { name: "pad_r";
	         type: SPACER;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: POPUP_CONTENT_DEFAULT_PADDING_LEFT_MIN_INC 0;
	            fixed: 1 0;
	            rel1.relative: 1.0 0.0;
	            rel2.relative: 1.0 1.0;
	            align: 1.0 0.0;
	         }
	      }
	      part { name: "elm.swallow.content";
	         type: SWALLOW;
	         scale: 1;
	         description { state: "default" 0.0;
	            min: 0 POPUP_EDITFIELD_LAYOUT_MINMAX_HEIGHT_INC;
	            align: 0.5 0.5;
	            rel1{
	               relative: 1.0 0.0 ;
	               to_x: "pad_l";
	            }
	            rel2{
	               relative: 0.0 1.0;
	               to_x: "pad_r";
	            }
	         }
	      }
	   }
	}
	///////////This style is for voice-call button from FDN Contact List////////////////////
	STYLE_FDN_LIST_CALL_BUTTON("style_fdn_list_call_btn", "cst_vc_btn_bg.png", "cst_vc_btn_bg_press.png", "cst_vc_btn_bg_dim.png", 72, 72,
		"cst_vc_btn.png", "cst_vc_btn.png", "cst_vc_btn.png", 45, 45)

/*************************************Transparent Contact button view with touch sound********************/
  plugins {
	plugin {
		name: "touch_sound"; // Name run by RUN_PLUGIN
		source: "feedback"; // External edje plugin name
		param: "FEEDBACK_TYPE_SOUND FEEDBACK_PATTERN_TAP";
	}
  }
   group{ name: "elm/button/base/cst_transparent";
	script {
		public mouse_down = 0;
		public multi_down = 0;
	}
	parts {
		part { name: "bg";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
			}
		}
		part { name: "elm.swallow.content";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
			}
		}
		part { name: "event";
			type: RECT;
			scale: 1;
			/* Do not remove the following line.
			 * elm.swallow.content part should receive mouse events. */
			repeat_events: 1;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
	programs {
		program { name: "pressed";
			signal: "mouse,down,1*";
			source: "event";
			script {
				if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) {
					set_int(mouse_down, 1);
					run_program(PROGRAM:"button_press1");
				}
			}
		}
		program { name: "button_press1";
			script {
			   new st[31];
			   new Float:vl;
			   get_state(PART:"bg", st, 30, vl);
			   if (strcmp(st, "disabled")) {
			      emit("elm,action,press", "");
			   }
			}
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "event";
			script {
			   if (get_int(mouse_down) == 1) {
			     set_int(mouse_down, 0);
			     run_program(PROGRAM:"button_unpress1");
			   }
			}
		}
		program { name: "button_unpress1";
		    script {
		       new st[31];
		       new Float:vl;
		       get_state(PART:"bg", st, 30, vl);
		       if (strcmp(st, "disabled")) {
		          emit("elm,action,unpress", "");
		       }
		    }
		}
		program { name: "clicked";
			signal: "mouse,clicked,1";
			source: "event";
			script {
				new st[31];
				new Float:vl;
				if (get_int(multi_down) == 0) {
					get_state(PART:"bg", st, 30, vl);
					if (strcmp(st, "disabled")) {
						run_program(PROGRAM:"touch_sound");
						emit("elm,action,click", "");
					}
				}
			}
		}
		program { name: "touch_sound";
			action: RUN_PLUGIN "touch_sound";
		}
		program { name: "disable";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "bg";
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "bg";
		}
		program { name: "multi_down";
			signal: "elm,action,multi,down";
			source: "elm";
			script {
				set_int(multi_down, 1);
			}
		}
		program { name: "multi_up";
			signal: "elm,action,multi,up";
			source: "elm";
			script {
				set_int(multi_down, 0);
			}
		}
	}
}
/*************************************Transparent Contact button view with touch sound END********************/

/*************************************Entry with contact button layout********************/
group {
	name: "entry_item_with_contact_btn";
	parts {
		part {
			name: "base";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 ENTRY_ITEM_HEIGHT;
				max: -1 ENTRY_ITEM_HEIGHT;
			}
		}

		part {
			name: "padding_left";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 0;
				align: 0 0.5;
				min: PADDING_LEFT 0;
				max: PADDING_LEFT -1;
				rel2.relative: 0.0 1.0;
			}
		}

		part {
			name: "padding_right";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 0;
				align: 1 0.5;
				rel1.relative: 1.0 0.0;
				min: CONTACT_BUTTON_PADDING_RIGHT 0;
				max: CONTACT_BUTTON_PADDING_RIGHT -1;
			}
		}

		part {
			name: "elm.swallow.contact_btn";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 0;
				align: 1 0.5;
				min: CONTACT_BUTTON_SIZE CONTACT_BUTTON_SIZE;
				max: CONTACT_BUTTON_SIZE CONTACT_BUTTON_SIZE;
				rel1 { relative: 0.0 0.0; to_x: "padding_right"; }
				rel2 { relative: 0.0 1.0; to_x: "padding_right"; }
			}
		}

		part {
			name: "contact_btn_padding_left";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 1 0;
				align: 1 0.5;
				min: CONTACT_BUTTON_PADDING_LEFT 0;
				max: CONTACT_BUTTON_PADDING_LEFT -1;
				rel1 { relative: 0.0 0.0; to_x: "elm.swallow.contact_btn"; }
				rel2 { relative: 0.0 1.0; to_x: "elm.swallow.contact_btn"; }
			}
		}

		part {
			name: "elm.swallow.editfield";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 1 0.5;
				fixed: 1 0;
				rel1 { relative: 0.0 0.0; to: "base"; }
				rel2 { relative: 1.0 1.0; to: "contact_btn_padding_left"; }
			}
		}
	}
}
/*************************************Entry with contact button layout END********************/

/************************************progressbar*******************************/

group { name: "popup_processingview_1button";
	styles {
		style { name: "popup_processing_style";
		base: "font=Tizen:style=Regular align=left font_size="30" color=#000000 wrap=mixed ellipsis=1.0";
		tag:  "br" "\n";
		tag:  "tab" "\t";
		}
	}
	parts {
		part { name: "base";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: DEMO_POPUP_PROCESSINGVIEW1BUTTON_CONTENT_MIN;
				fixed: 1 0;
			}
		}
		part { name: "pad_l";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: 23 0;
				fixed: 1 0;
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.0 1.0;
				align: 0.0 0.0;
			}
		}
		part { name: "pad_r";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: 23 0;
				fixed: 1 0;
				rel1.relative: 1.0 0.0;
				rel2.relative: 1.0 1.0;
				align: 1.0 0.0;
			}
		}
		part { name: "elm.swallow.content";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 0 58;
				max: 0 58;
				rel1 {
					relative: 1.0 0.0;
					to_x: "pad_l";
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "pad_r";
				}
				align: 0.0 0.5;
			}
		}
		part { name: "pad_after_processing";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 23 144;
				rel1 {
					relative: 1.0 0.0;
					to: "elm.swallow.content";
				}
				rel2.to: "elm.swallow.content";
				align: 0.0 0.5;
			}
		}
		part { name: "elm.text";
			type: TEXTBLOCK;
			scale : 1;
			description { state: "default" 0.0;
				min: 1 1;
				fixed: 0 1;
				rel1 {
					relative: 1.0 0.0;
					to: "pad_after_processing";
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "pad_r";
				}
				align: 0.0 0.5;
				text {
					style: "popup_processing_style";
					min: 0 1;
				}
			}
		}
	}
}

group { name: "popup_checkview";
	parts {
		part { name: "pad_t";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				align: 0.5 0.0;
				min: 0 32;
				fixed: 0 1;
				rel1 {
					relative: 1.0 0.0;to_x: "pad_l";
				}
				rel2 {
					relative: 0.0 0.0;to_x: "pad_r";
				}
			}
		}
		part { name: "pad_l";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: 26 0;
				max: 26 0;
				fixed: 1 0;
				rel1 {
					relative: 0.0 0.0;
				}
				rel2 {
					relative: 0.0 1.0;
				}
				align: 0.0 0.0;
			}
		}
		part { name: "pad_r";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				min: 26 0;
				max: 26 0;
				fixed: 1 0;
				rel1 {
					relative: 1.0 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				align: 1.0 0.0;
			}
		}
		part { name: "elm.swallow.content";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 1 0;
				rel1 {
					relative: 1.0 1.0;
					to_x: "pad_l";
					to_y: "pad_t";
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "pad_r";
					to_y: "pad_b";
				}
			}
		}
		part { name: "bottom_pad";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				align: 0.0 1.0;
				min: 0 32;
				fixed: 0 1;
				rel1 {
					relative: 1.0 1.0;
					to_x: "pad_l";
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "pad_r";
				}
			}
		}
		part { name: "pad_b";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				align: 0.0 1.0;
				min: 0 121;
				fixed: 0 1;
				rel1 {
					relative: 0.0 0.0;
					to: "bottom_pad";
				}
				rel2 {
					relative: 1.0 0.0;
					to: "bottom_pad";
				}
			}
		}
		part { name: "end_field";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				align: 0.0 1.0;
				min: 0 100;
				fixed: 0 1;
				rel1 {
					relative: 0.0 1.0;
					to: "pad_b";
				}
				rel2 {
					relative: 1.0 1.0;
					to: "pad_b";
				}
			}
		}
		part { name: "elm.swallow.end";
			type: SWALLOW;
			scale: 1;
			description { state: "default" 0.0;
				fixed: 1 1;
				align: 0.0 0.5;
				rel1.to: "end_field";
				rel2.to: "end_field";
			}
		}
	}
}
/************************************end of progressbar*******************************/
